name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: #manual

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: inoventory-service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: inoventory-service-build-artifact
          path: build/libs/

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - uses: actions/download-artifact@master
        with:
          name: inoventory-service-build-artifact
          path: build/libs/

      - name: Build Docker image
        run: docker build -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GitHub Container Registry
        run: |
            docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }} --all-tags
        
  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Setup .env file
        run: |
          touch .env         
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }} >> .env
          echo KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }} >> .env
          echo APP_TAG=${{ github.sha }} >> .env

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy .env and docker-compose file to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP_PUBLIC }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,.env"
          target: "~/app"

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP_PUBLIC }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |  
            mkdir -p ~/app
            echo ${{ secrets.GITHUB_TOKEN}} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            docker-compose -f ~/app/docker-compose.yml up -d
            docker logout ${{ env.REGISTRY }} 
