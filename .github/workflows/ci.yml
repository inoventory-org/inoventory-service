name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: #manual

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: inoventory-service

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via Docker-Compose
        run: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            eval $(ssh-agent -s)
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh-keyscan -H $SERVER_IP_PUBLIC >> ~/.ssh/known_hosts
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker-compose -f ~/app/docker-compose.yml down --rmi local --remove-orphans"
            echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
            echo PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD >> .env
            echo KEYCLOAK_URL=$KEYCLOAK_URL >> .env
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "mkdir -p ~/app"
            scp -r docker-compose.yml ubuntu@${SERVER_IP_PUBLIC}:~/app
            scp -r .env ubuntu@${SERVER_IP_PUBLIC}:~/app
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "echo $REGISTRY_PASSWORD | docker login --username $REGISTRY_USER --password-stdin $REGISTRY_URL"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker image rm registry.inovex.de:4567/railabouni/inoventory-service"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker-compose -f ~/app/docker-compose.yml up -d"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "rm -f ~/app/.env" # For some reason unable to run SSH in after_script
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker logout"
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            eval $(ssh-agent -s)
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh-keyscan -H $SERVER_IP_PUBLIC >> ~/.ssh/known_hosts
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "rm -f ~/app/.env"   
