name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: #manual

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: inoventory-service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: inoventory-service-build-artifact
          path: build/libs/


  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - uses: actions/download-artifact@master
        with:
          name: inoventory-service-build-artifact
          path: build/libs/

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GitHub Container Registry
        run: |
            docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
          

  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via Docker-Compose
        run: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            eval $(ssh-agent -s)
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh-keyscan -H $SERVER_IP_PUBLIC >> ~/.ssh/known_hosts
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker-compose -f ~/app/docker-compose.yml down --rmi local --remove-orphans"
            echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
            echo PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD >> .env
            echo KEYCLOAK_URL=$KEYCLOAK_URL >> .env
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "mkdir -p ~/app"
            scp -r docker-compose.yml ubuntu@${SERVER_IP_PUBLIC}:~/app
            scp -r .env ubuntu@${SERVER_IP_PUBLIC}:~/app
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "echo $REGISTRY_PASSWORD | docker login --username $REGISTRY_USER --password-stdin $REGISTRY_URL"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker image rm registry.inovex.de:4567/railabouni/inoventory-service"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker-compose -f ~/app/docker-compose.yml up -d"
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "rm -f ~/app/.env" # For some reason unable to run SSH in after_script
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "docker logout"
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            eval $(ssh-agent -s)
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ssh-keyscan -H $SERVER_IP_PUBLIC >> ~/.ssh/known_hosts
            ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP_PUBLIC "rm -f ~/app/.env"   
